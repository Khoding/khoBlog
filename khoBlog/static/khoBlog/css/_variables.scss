@use "sass:map";

$colors: (
    primary: #5444A6,
    secondary: #444749,
    danger: #F22A02,
    success: #18F23D,
    warning: #FF5533,
    info: #9D92D4,
    dark: #212121,
);

$variations: (
    'd2': (
        function: get-function(darken),
        parameters: 15%
    ),
    'd1': (
        function: get-function(darken),
        parameters: 10%
    ),
    'l1': (
        function: get-function(lighten),
        parameters: 5%
    ),
    'l2': (
        function: get-function(lighten),
        parameters: 20%
    ),
    'fade': (
        function: get-function(rgba),
        parameters: .7
    ),
    'gray': (
        function: get-function(grayscale)
    ),
    'shade': (
        function: get-function(mix),
        parameters: white 80%
    )
);

@function color-variation($color, $variation: false) {

    @if map-has-key($colors, $color) {
        $color: map-get($colors, $color);
    } @else {
        @if type-of($color) != color {
            @error "Invalid color name: `#{$color}`.";
        }
    }

    @if $variation {
        @if not map-has-key($variations, $variation) {
            @error "Invalid $variation: `#{$variation}`.";
        } @else {
            $this-variation: map-get($variations, $variation);
            $args: join(map-get($this-variation, function), $color);
            @if map-get($this-variation, parameters) {
                $args: join($args, map-get($this-variation, parameters));
            }
            @return call($args...);
        }
    }
    @return $color;
}

@function cv($color, $variation:false) {
    @return color-variation($color, $variation);
}

// $palette-d2: #3B2F74;
// $palette-d1: #493B91;
// $palette-primary: #5444A6;
// $palette-l1: #6F60BE;
// $palette-l2: #897DCA;

// $palette-s-d2: #1D1F20;
// $palette-s-d1: #313335;
// $palette-secondary: #444749;
// $palette-s-l1: #585D5F;
// $palette-s-l2: #6C7275;

// $semantics-d-d2: #A21C02;
// $semantics-d-d1: #CA2302;
// $semantics-danger: #F22A02;
// $semantics-d-l1: #FD4521;
// $semantics-d-l2: #FD6749;

// $semantics-s-d2: #0AAE25;
// $semantics-s-d1: #0CD42E;
// $semantics-success: #18F23D;
// $semantics-s-l1: #3EF45C;
// $semantics-s-l2: #65F67D;

// $semantics-w-d2: #E02500;
// $semantics-w-d1: #FF330A;
// $semantics-warning: #FF5533;
// $semantics-w-l1: #FF775C;
// $semantics-w-l2: #FF9985;

// $semantics-i-d2: #6F5FBF;
// $semantics-i-d1: #897CCB;
// $semantics-info: #9D92D4;
// $semantics-i-l1: #BDB6E2;
// $semantics-i-l2: #D8D3EE;

$palette_light: cv(primary, l2);
$palette_attenuation: cv(primary, shade);
$palette_dark: #212121;

$link-color: $palette_light;
$link-hover-color: $palette_attenuation;

$link-decoration: none;
$link-hover-decoration: underline;

$white: #FFFFFF;
$black: #000000;

// $palette-p: (
//     'd2': $palette-d2,
//     'd1': $palette-d1,
//     'p': $palette-primary,
//     'l1': $palette-l1,
//     'l2': $palette-l2
// );

// $palette-s: (
//     'd2': $palette-s-d2,
//     'd1': $palette-s-d1,
//     's': $palette-secondary,
//     'l1': $palette-s-l1,
//     'l2': $palette-s-l2
// );

// $semantics-d: (
//     'd2': $semantics-d-d2,
//     'd1': $semantics-d-d1,
//     'd': $semantics-danger,
//     'l1': $semantics-d-l1,
//     'l2': $semantics-d-l2
// );

// $semantics-s: (
//     'd2': $semantics-s-d2,
//     'd1': $semantics-s-d1,
//     's': $semantics-success,
//     'l1': $semantics-s-l1,
//     'l2': $semantics-s-l2
// );

// $semantics-w: (
//     'd2': $semantics-w-d2,
//     'd1': $semantics-w-d1,
//     'w': $semantics-warning,
//     'l1': $semantics-w-l1,
//     'l2': $semantics-w-l2
// );

// $semantics-i: (
//     'd2': $semantics-i-d2,
//     'd1': $semantics-i-d1,
//     'i': $semantics-info,
//     'l1': $semantics-i-l1,
//     'l2': $semantics-i-l2
// );


$black-white: (
    'white': $white,
    'black': $black
);

$sans-serif: Roboto, -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$headings: 'Merriweather', "Palatino Linotype", "Book Antiqua", Palatino, serif;
$body: 'Roboto', 'Helvetica', "Lucida Sans Unicode", "Lucida Grande", sans-serif;
$monospace: 'Overpass Mono', SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
