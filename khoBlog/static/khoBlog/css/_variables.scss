@use "sass:map";

// Color themes
$themes: (
    "default": (
        "text": hsl(0, 0%, 100%),
        "bg": hsl(0, 0%, 13%),
        "darker-bg": darken(hsl(0, 0%, 13%), 1%),
        "lighter-bg": lighten(hsl(0, 0%, 13%), 2%),
        "lightest-bg": lighten(hsl(0, 0%, 13%), 5%),
        "link": hsl(0, 100%, 62%),
        "menu-link": hsl(0, 0%, 64%),
        "border-color": hsl(180, 2%, 56%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "banana": (
        "text": hsl(0, 91%, 70%),
        "bg": hsl(48, 74%, 54%),
        "darker-bg": darken(hsl(48, 74%, 54%), 1%),
        "lighter-bg": lighten(hsl(48, 74%, 54%), 5%),
        "lightest-bg": lighten(hsl(48, 74%, 54%), 10%),
        "link": hsl(240, 100%, 50%),
        "menu-link": hsl(208, 7%, 46%),
        "border-color": hsl(46, 59%, 44%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "uglybanana": (
        "text": hsl(0, 0%, 100%),
        "bg": hsl(48, 89%, 50%),
        "darker-bg": darken(hsl(48, 89%, 50%), 1%),
        "lighter-bg": lighten(hsl(48, 89%, 50%), 5%),
        "lightest-bg": lighten(hsl(48, 89%, 50%), 10%),
        "link": hsl(240, 100%, 50%),
        "menu-link": hsl(208, 7%, 46%),
        "border-color": hsl(249, 65%, 76%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "cherry": (
        "text": hsl(0, 100%, 77%),
        "bg": hsl(6, 63%, 46%),
        "darker-bg": darken(hsl(6, 63%, 46%), 1%),
        "lighter-bg": lighten(hsl(6, 63%, 46%), 5%),
        "lightest-bg": lighten(hsl(6, 63%, 46%), 10%),
        "link": hsl(330, 100%, 65%),
        "menu-link": hsl(342, 74%, 70%),
        "border-color": hsl(6, 78%, 55%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "sop": (
        "text": hsl(271, 100%, 69%),
        "bg": hsl(240, 35%, 18%),
        "darker-bg": darken(hsl(240, 35%, 18%), 1%),
        "lighter-bg": lighten(hsl(240, 35%, 18%), 3%),
        "lightest-bg": lighten(hsl(240, 35%, 18%), 7%),
        "link": hsl(50, 100%, 49%),
        "menu-link": hsl(218, 15%, 71%),
        "border-color": hsl(249, 66%, 76%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "leaf": (
        "text": hsl(0, 0%, 100%),
        "bg": hsl(145, 63%, 42%),
        "darker-bg": darken(hsl(145, 63%, 42%), 1%),
        "lighter-bg": lighten(hsl(145, 63%, 42%), 5%),
        "lightest-bg": lighten(hsl(145, 63%, 42%), 10%),
        "link": hsl(240, 100%, 50%),
        "menu-link": hsl(208, 7%, 46%),
        "border-color": hsl(249, 65%, 76%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
    "nightsky": (
        "text": hsl(0, 0%, 100%),
        "bg": hsl(204, 64%, 44%),
        "darker-bg": darken(hsl(204, 64%, 44%), 1%),
        "lighter-bg": lighten(hsl(204, 64%, 44%), 5%),
        "lightest-bg": lighten(hsl(204, 64%, 44%), 10%),
        "link": hsl(240, 100%, 50%),
        "menu-link": hsl(208, 7%, 46%),
        "border-color": hsl(249, 65%, 76%),
        "side-link": hsl(250, 42%, 66%),
        "active-color": white,
    ),
);

// // $themes: (
// //     default: #212121,
// //     banana: #f1c40f,
// //     cherry: #c0392b,
// //     blueberry: #8e44ad,
// //     leaf: #27ae60,
// //     nightsky: #2980b9
// // );

// // :root {
// // 	/* Thanks Lea Verou! https://lea.verou.me/2020/10/the-var-space-hack-to-toggle-multiple-values-with-one-custom-property/ */
// // 	--ON: initial;
// // 	--OFF: ;
// // }

// // .default,
// // .dark {
// // 	--dark: var(--ON);
// // 	--banana: var(--OFF);
// // 	--cherry: var(--OFF);
// // 	--purple: var(--OFF);
// // 	--leaf: var(--OFF);
// // 	--nightsky: var(--OFF);
// // }

// // .banana {
// // 	--dark: var(--OFF);
// // 	--banana: var(--ON);
// // 	--cherry: var(--OFF);
// // 	--purple: var(--OFF);
// // 	--leaf: var(--OFF);
// // 	--nightsky: var(--OFF);
// // }

// // .cherry {
// // 	--dark: var(--OFF);
// // 	--banana: var(--OFF);
// // 	--cherry: var(--ON);
// // 	--purple: var(--OFF);
// // 	--leaf: var(--OFF);
// // 	--nightsky: var(--OFF);
// // }

// // .purple {
// // 	--dark: var(--OFF);
// // 	--banana: var(--OFF);
// // 	--cherry: var(--OFF);
// // 	--purple: var(--ON);
// // 	--leaf: var(--OFF);
// // 	--nightsky: var(--OFF);
// // }

// // .leaf {
// // 	--dark: var(--OFF);
// // 	--banana: var(--OFF);
// // 	--cherry: var(--OFF);
// // 	--purple: var(--OFF);
// // 	--leaf: var(--ON);
// // 	--nightsky: var(--OFF);
// // }

// // .nightsky {
// // 	--dark: var(--OFF);
// // 	--banana: var(--OFF);
// // 	--cherry: var(--OFF);
// // 	--purple: var(--OFF);
// // 	--leaf: var(--OFF);
// // 	--nightsky: var(--ON);
// // }

// // @media (prefers-color-scheme: light) {
// // 	.default {
// // 		--dark: var(--OFF);
// //         --banana: var(--ON);
// //         --cherry: var(--OFF);
// //         --purple: var(--OFF);
// //         --leaf: var(--OFF);
// //         --nightsky: var(--OFF);
// // 	}
// // }

$drac-fg: hsl(60, 30%, 96%);
$drac-bg: hsl(231, 15%, 18%);
$drac-highlight: hsl(66, 94%, 73%);
$drac-selection: hsl(231, 25%, 25%);
$drac-blue: hsl(225, 27%, 51%);
$drac-cyan: hsl(191, 97%, 77%);
$drac-green: hsl(135, 94%, 65%);
$drac-orange: hsl(31, 100%, 71%);
$drac-pink: hsl(326, 100%, 74%);
$drac-purple: hsl(265, 89%, 78%);
$drac-red: hsl(0, 100%, 67%);
$drac-yellow: hsl(65, 92%, 76%);

// Non-standard Dracula colors
$drac-grey: hsl(225, 8%, 51%);
$drac-teal: hsl(161, 97%, 77%);
$drac-light-blue: hsl(190, 94%, 87%);
$drac-light-green: hsl(135, 92%, 79%);
$drac-dark-pink: hsl(325, 100%, 64%);
$drac-dark-red: hsl(0, 100%, 59%);
$drac-dark-yellow: hsl(51, 94%, 73%);

$drac-default-bg: lighten($drac-bg, 5%);

:root > * {
    // Custom code colors
    --md-code-link-bg-color: hsla(0, 0%, 96%, 1);
    --md-code-link-accent-bg-color: var(--md-code-link-bg-color);

    --md-code-special-bg-color: #{darken(hsl(0, 0%, 96%), 5%)};
    --md-code-alternate-bg-color: var(--md-code-bg-color);

    --md-code-hl-punctuation-color: var(--md-code-fg-color);
    --md-code-hl-namespace-color: var(--md-code-fg-color);

    --md-code-hl-entity-color: var(--md-code-hl-keyword-color);
    --md-code-hl-tag-color: var(--md-code-hl-keyword-color);
    --md-code-hl-builtin-color: var(--md-code-hl-constant-color);
    --md-code-hl-class-color: var(--md-code-hl-function-color);

    // Keys colors
    --md-typeset-kbd-color: #{shade(hsla(0, 100%, 100%, 1), 8%)};
    --md-typeset-kbd-border-color: #{shade(hsla(0, 100%, 100%, 1), 28%)};
    --md-typeset-kbd-accent-color: hsla(0, 100%, 100%, 1);

    // Dark mode color changes
    & {
        // Default color shades
        --md-default-fg-color: #{transparentize($drac-fg, 0.13)};
        --md-default-fg-color--light: #{transparentize($drac-fg, 0.46)};
        --md-default-fg-color--lighter: #{transparentize($drac-fg, 0.84)};
        --md-default-fg-color--lightest: #{transparentize($drac-fg, 0.93)};

        --md-default-bg-color: #{$drac-default-bg};
        --md-default-bg-color--light: #{transparentize($drac-default-bg, 0.3)};
        --md-default-bg-color--lighter: #{transparentize($drac-default-bg, 0.7)};
        --md-default-bg-color--lightest: #{transparentize(
                $drac-default-bg,
                0.88
            )};

        // Code colors
        --md-code-fg-color: #{$drac-fg};
        --md-code-bg-color: #{$drac-bg};
        --md-code-hl-operator-color: #{$drac-pink};
        --md-code-hl-punctuation-color: #{$drac-fg};
        --md-code-hl-string-color: #{$drac-yellow};
        --md-code-hl-special-color: #{$drac-purple};
        --md-code-hl-number-color: #{$drac-purple};
        --md-code-hl-keyword-color: #{$drac-pink};
        --md-code-hl-name-color: #{$drac-fg};
        --md-code-hl-constant-color: #{$drac-purple};
        --md-code-hl-function-color: #{$drac-green};
        --md-code-hl-comment-color: #{$drac-blue};
        --md-code-hl-variable-color: #{$drac-orange};
        --md-code-hl-generic-color: #{$drac-blue};
        --md-code-hl-color: #{$drac-selection};

        // Custom code colors
        --md-code-hl-entity-color: #{$drac-green};
        --md-code-hl-tag-color: #{$drac-pink};
        --md-code-hl-namespace-color: #{$drac-fg};
        --md-code-hl-builtin-color: #{$drac-cyan};
        --md-code-hl-class-color: #{$drac-cyan};

        --md-code-special-bg-color: #{lighten($drac-bg, 5%)};
        --md-code-alternate-bg-color: #{tint($drac-bg, 10%)};
        --md-code-link-bg-color: #{mix($drac-cyan, $drac-bg, 15%)};

        // Various Material related color variables
        --md-typeset-a-color: #{$drac-cyan};
        --md-typeset-mark-color: #{mix($drac-yellow, $drac-bg, 35%)};
        --md-typeset-del-color: #{mix($drac-pink, $drac-bg, 35%)};
        --md-typeset-ins-color: #{mix($drac-green, $drac-bg, 35%)};

        // Progressbar colors
        --md-progress-stripe: var(--md-default-bg-color--lightest);
        --md-progress-100: #{$drac-green};
        --md-progress-80: #{$drac-light-green};
        --md-progress-60: #{$drac-yellow};
        --md-progress-40: #{$drac-orange};
        --md-progress-20: #{$drac-pink};
        --md-progress-0: #{$drac-red};

        // Keys colors
        --md-typeset-kbd-color: var(--md-default-fg-color--lightest);
        --md-typeset-kbd-border-color: var(--md-default-bg-color--darkest);
        --md-typeset-kbd-accent-color: var(--md-default-fg-color--lighter);
    }

    // Dark specific colors
    --md-default-bg-color--dark: #{darken($drac-default-bg, 3%)};
    --md-default-bg-color--darker: #{darken($drac-default-bg, 6%)};
    --md-default-bg-color--darkest: #{darken($drac-default-bg, 9%)};
    --md-default-bg-color--ultra-dark: #{darken($drac-default-bg, 15%)};
}

// ----------------------------------------------------------------------------
// Rules: primary colors
// ----------------------------------------------------------------------------

@each $name,
    $colors
        in (
            "red": $drac-red lighten($drac-red, 5%) darken($drac-red, 5%),
            "pink": $drac-pink lighten($drac-pink, 5%) darken($drac-pink, 5%),
            "purple":
                $drac-purple
                lighten($drac-purple, 5%)
                darken($drac-purple, 5%),
            "deep-purple":
                $drac-purple
                lighten($drac-purple, 5%)
                darken($drac-purple, 5%),
            "blue": $drac-blue lighten($drac-blue, 5%) darken($drac-blue, 5%),
            "indigo": $drac-blue lighten($drac-blue, 5%) darken($drac-blue, 5%),
            "light-blue":
                $drac-blue
                lighten($drac-blue, 5%)
                darken($drac-blue, 5%),
            "cyan": $drac-cyan lighten($drac-cyan, 5%) darken($drac-cyan, 5%),
            "teal": $drac-cyan lighten($drac-cyan, 5%) darken($drac-cyan, 5%),
            "green":
                $drac-green
                lighten($drac-green, 5%)
                darken($drac-green, 5%),
            "light-green":
                $drac-green
                lighten($drac-green, 5%)
                darken($drac-green, 5%),
            "lime":
                $drac-green
                lighten($drac-green, 5%)
                darken($drac-green, 5%),
            "yellow":
                $drac-yellow
                lighten($drac-yellow, 5%)
                darken($drac-yellow, 5%),
            "amber":
                $drac-yellow
                lighten($drac-yellow, 5%)
                darken($drac-yellow, 5%),
            "orange":
                $drac-orange
                lighten($drac-orange, 5%)
                darken($drac-orange, 5%),
            "deep-orange":
                $drac-orange
                lighten($drac-orange, 5%)
                darken($drac-orange, 5%)
        )
{
    // Color palette
    [data-md-color-primary="#{$name}"],
    :not([data-md-color-scheme])[data-md-color-primary="#{$name}"] {
        --md-primary-code-bg-color: #{mix($drac-bg, nth($colors, 1), 85%)};
        --md-primary-fg-color: hsla(#{hex2hsl(nth($colors, 1))}, 1);
        --md-primary-fg-color--transparent: hsla(
            #{hex2hsl(nth($colors, 1))},
            0.1
        );
        --md-primary-fg-color--light: hsla(#{hex2hsl(nth($colors, 2))}, 1);
        --md-primary-fg-color--dark: hsla(#{hex2hsl(nth($colors, 3))}, 1);
        --md-primary-bg-color: var(--md-default-bg-color);
        --md-primary-bg-color--light: var(--md-default-bg-color--light);
    }
}

// ----------------------------------------------------------------------------
// Rules: accent colors
// ----------------------------------------------------------------------------

@each $name,
    $color
        in (
            "red": darken($drac-red, 5%),
            "pink": darken($drac-pink, 5%),
            "purple": darken($drac-purple, 5%),
            "deep-purple": darken($drac-purple, 5%),
            "blue": darken($drac-blue, 5%),
            "indigo": darken($drac-blue, 5%),
            "light-blue": darken($drac-blue, 5%),
            "cyan": darken($drac-cyan, 5%),
            "teal": darken($drac-cyan, 5%),
            "green": darken($drac-green, 5%),
            "light-green": darken($drac-green, 5%),
            "lime": darken($drac-green, 5%),
            "yellow": darken($drac-yellow, 5%),
            "amber": darken($drac-yellow, 5%),
            "orange": darken($drac-orange, 5%),
            "deep-orange": darken($drac-orange, 5%)
        )
{
    // Color palette
    [data-md-color-accent="#{$name}"],
    :not([data-md-color-scheme])[data-md-color-primary="#{$name}"] {
        --md-code-link-accent-bg-color: #{mix($color, $drac-bg, 15%)};
        --md-accent-fg-color: hsla(#{hex2hsl($color)}, 1);
        --md-accent-fg-color--transparent: hsla(#{hex2hsl($color)}, 0.1);
        --md-accent-bg-color: var(--md-default-bg-color);
        --md-accent-bg-color--light: var(--md-default-bg-color--light);
    }
}

$old-admonitions: (
    note: $drac-dark-yellow,
    abstract summary tldr: $drac-cyan,
    info todo: $drac-light-blue,
    tip hint important: $drac-teal,
    success check done: $drac-green,
    question help faq: $drac-light-green,
    warning caution attention: $drac-orange,
    failure fail missing: $drac-dark-red,
    danger error: $drac-red,
    bug: $drac-dark-pink,
    example: $drac-purple,
    quote cite: $drac-grey,
) !default;

:root > * {
    --md-admonition-bg-color: transparent;

    & {
        --md-admonition-icon-color: $drac-dark-yellow;
    }

    @each $names, $tint in $old-admonitions {
        $name: nth($names, 1);
        --md-admonition-bg-color--#{$name}: var(--md-default-bg-color--darkest);
        --md-admonition-icon-color--#{$name}: #{$tint};
    }
}

$colors: (
    primary: hsl(250, 42%, 46%),
    secondary: hsl(204, 4%, 28%),
    danger: hsl(10, 98%, 48%),
    success: hsl(130, 89%, 52%),
    warning: hsl(10, 100%, 60%),
    info: hsl(250, 43%, 70%),
    dark: hsl(0, 0%, 13%),
);

$variations: (
    "d2": (
        function: get-function(darken),
        parameters: 15%,
    ),
    "d1": (
        function: get-function(darken),
        parameters: 10%,
    ),
    "l1": (
        function: get-function(lighten),
        parameters: 5%,
    ),
    "l2": (
        function: get-function(lighten),
        parameters: 20%,
    ),
    "fade": (
        function: get-function(rgba),
        parameters: 0.7,
    ),
    "gray": (
        function: get-function(grayscale),
    ),
    "shade": (
        function: get-function(mix),
        parameters: hsl(0, 0%, 100%) 80%,
    ),
);

@function color-variation($color, $variation: false) {
    @if map-has-key($colors, $color) {
        $color: map-get($colors, $color);
    } @else {
        @if type-of($color) != color {
            @error "Invalid color name: `#{$color}`.";
        }
    }

    @if $variation {
        @if not map-has-key($variations, $variation) {
            @error "Invalid $variation: `#{$variation}`.";
        } @else {
            $this-variation: map-get($variations, $variation);
            $args: join(map-get($this-variation, function), $color);
            @if map-get($this-variation, parameters) {
                $args: join($args, map-get($this-variation, parameters));
            }
            @return call($args...);
        }
    }
    @return $color;
}

@function cv($color, $variation: false) {
    @return color-variation($color, $variation);
}

$palette_light: cv(primary, l2);
$palette_dark: #212121;

$link-color: $palette_light;

$link-decoration: none;
$link-hover-decoration: underline;

$white: hsl(0, 0%, 100%);
$black: hsl(0, 0%, 0%);

$black-white: (
    "white": $white,
    "black": $black,
);

$enable-grid-classes: true;
$enable-cssgrid: false;

$enable-rounded: false;

$sans-serif: Roboto, -apple-system, BlinkMacSystemFont, "Segoe UI",
    "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$headings: "Merriweather", "Palatino Linotype", "Book Antiqua", Palatino, serif;
$body: "Roboto", "Helvetica", "Lucida Sans Unicode", "Lucida Grande", sans-serif;
$monospace: "Overpass Mono", SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace !default;
